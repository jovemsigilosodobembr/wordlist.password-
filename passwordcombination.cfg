# [ passwordcombination.cfg ]
# ğŸ‡§ğŸ‡·

# [mode 9004883]
# Se vocÃª acha que essas configuraÃ§Ãµes padrÃ£o nÃ£o estÃ£o corretas,
# vocÃª pode mudar sozinho. Por exemplo se vocÃª
# nÃ£o gosta de a=4, apenas mude para a=@ :)
# Se nÃ£o precisar de alguns personagens, Ã© sÃ³ comentar! Duplicatas tambÃ©m sÃ£o permitidas.
# Para adicionar caracteres, vocÃª pode precisar adicionar algumas linhas em Password.py...

[years]
years = 1990,1991,1992,1993,1994,1995,1996,1997,1998,1999,2000,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018,2019,2020,2021,2022,2023,2024,2025

[leet]
a=4
i=1
e=3
t=7
o=0
s=5
g=9
z=2


# [ Special chars ] for adding some pwnsauce! Remove or add as necessary,
# separated by comma

[specialchars]
chars=!,@,'#',$,%%,&,*

[U+0020]



# [ Random years ] pegue o quanto precisar!




# [ NÃºmeros aleatÃ³rios ]
# Nesta configuraÃ§Ã£o padrÃ£o, nÃºmeros de 0 a 100 serÃ£o adicionados a todas as palavras
# compilado por password.py

[nums]
from=0
to=90000

# [formataÃ§Ã£o do comprimento da palavra]
# Esta configuraÃ§Ã£o excluirÃ¡ palavras da lista de palavras compiladas que sÃ£o mais curtas
# do que [wcfrom] e mais longo do que [wcto].

wcfrom=5
wcto=12

# [ Limite ]
# ConfiguraÃ§Ã£o de limite para concatenaÃ§Ãµes de palavras analisadas da lista de palavras existente
# (usando a opÃ§Ã£o -w).
# Por exemplo, a partir de 200 palavras, o CUPP compilarÃ¡ 200*200=40.000 novas palavras.
# Aumentar este nÃ­vel pode causar alto consumo de memÃ³ria, tenha cuidado.

threshold=200


